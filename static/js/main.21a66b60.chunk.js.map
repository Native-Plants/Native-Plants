{"version":3,"sources":["components/nav/nav.js","components/footer/footer.js","components/home/home.js","components/about/about.js","components/plant/plant.js","components/shared/filterOptions.js","components/plantList/filters.js","components/shared/pageViewOptions.js","components/plantList/plants/status.js","components/plantList/plants/plantCard.js","components/plantList/plants/plants.js","components/plantList/plantList.js","components/store/store.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","navList","display","centerText","textAlign","navItem","margin","color","textDecoration","drawerItem","drawerText","paddingLeft","list","width","backgroundColor","height","Nav","props","navObjects","classes","useState","mobileToggle","setMobileToggle","navListItems","map","navObject","to","path","key","id","className","Typography","variant","name","drawerItems","ListItem","button","onClick","ListItemText","Divider","menu","Drawer","anchor","open","onClose","role","List","mobileIcon","Grid","item","xs","AppBar","position","Toolbar","Hidden","mdUp","md","smDown","footer","left","bottom","right","Footer","Home","About","flex","pictureCard","paddingTop","paddingBottom","imageFit","objectFit","Plant","plantName","useParams","plant","setPlant","loading","setLoading","useEffect","a","Tabletop","init","callback","plants","plantList","filter","genus","species","console","log","length","simpleSheet","fetchData","content","attribute","uploader","alt","photoName","src","commonName","stateAndProvince","duration","growthHabit","nativeStatus","activeGrowthPeriod","shadeTolerance","commercialAvailability","container","Backdrop","CircularProgress","data","shadeToleranceOptions","durationOptions","growthHabitOptions","activeGrowthPeriodOptions","commercialAvailabilityOptions","filters","flexDirection","toggleIcon","marginRight","marginLeft","option","searchBar","searchField","flexGrow","backIcon","DisplayFilter","label","setList","options","setPageNumber","toggle","setToggle","icon","optionCheckboxes","FormControlLabel","control","Checkbox","checked","includes","value","onChange","e","tempList","JSON","parse","stringify","push","handleClick","displayOptions","IconButton","Filter","searchText","setSearchText","favoritedFilter","setFavoritedFilter","selects","setMobileFilterToggle","displaySearchBar","spacing","alignItems","TextField","fullWidth","target","displayFilter","select","displayFilterProps","displayFavoritedFilter","plantsPerPageOptions","statusBar","statusItem","justifyContent","Status","pageNumber","plantsPerPage","setPlantsPerPage","maxLength","filteredPlantLength","pageSizeSelect","Select","style","MenuItem","primary","pageStatusInfo","pageNavigation","disabled","sm","columnFlex","navLink","rightAligned","imageFitMobile","PlantCard","favorited","onClickFavorite","Icon","Plants","pageStatusProps","plantCardsProps","isLiked","favoritePlantsCopy","favoritePlants","splice","indexOf","setFavoritePlants","concat","plantCard","displayPlantList","plantCardProps","emptyResults","backdrop","zIndex","paddingRight","PlantList","mobileFilterToggle","shadeToleranceSelected","setShadeToleranceSelected","durationSelected","setDurationSelected","growthHabitSelected","setGrowthHabitSelected","activeGrowthPeriodSelected","setActiveGrowthPeriodSelected","commercialAvailabilitySelected","setCommercialAvailabilitySelected","setPlantList","localData","localStorage","getItem","isValueIncluded","selectedList","toLowerCase","isSearchIncluded","count","searchList","split","searchItem","trim","setItem","filteredPlantList","favoritedResults","shadeToleranceResults","durationResults","growthHabitResults","activeGrowthPeriodResults","commercialAvailabilityResults","plantsProps","sort","b","slice","filtersProps","Button","Store","routeComponentContainer","minHeight","App","pageObjects","exact","component","pageObject","pageRoutes","basename","process","Boolean","window","location","hostname","match","theme","createMuiTheme","palette","main","secondary","background","default","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.21a66b60.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport MenuOpenIcon from '@material-ui/icons/MenuOpen';\r\nimport { AppBar, Toolbar, Typography, Grid, makeStyles, Hidden, Drawer, List, ListItem, ListItemText, Divider } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n  navList: {\r\n    display: 'flex'\r\n  },\r\n  centerText: {\r\n    textAlign: \"center\"\r\n  },\r\n  navItem: {\r\n    margin: 'auto',\r\n    color: 'white',\r\n    textDecoration: 'none',\r\n  },\r\n  drawerItem: {\r\n    color: 'white',\r\n    textDecoration: 'none'\r\n  },\r\n  drawerText: {\r\n    paddingLeft: '25px',\r\n  },\r\n  list: {\r\n    width: 250,\r\n    backgroundColor: \"#687864\",\r\n    height: '100%'\r\n  }\r\n});\r\n\r\nfunction Nav(props) {\r\n  /*Declaring variables from props*/\r\n  const navObjects = props.navObjects;\r\n  const classes = useStyles();\r\n\r\n  const [mobileToggle, setMobileToggle] = useState(false);\r\n  \r\n  /*\r\n    Creating a state variable to track the current page.\r\n    The default value is by checking which navObject shares the same pathname as what is in the browser.\r\n    This is currently being used for styling purposes.\r\n  */\r\n  \r\n  const navListItems = navObjects.map(navObject => {\r\n    return (\r\n      <NavLink to = {navObject.path} key = {navObject.id} className={classes.navItem}>\r\n          <Typography variant=\"subtitle1\">\r\n            {navObject.name}\r\n          </Typography>\r\n      </NavLink>\r\n    );\r\n  });\r\n\r\n  const drawerItems = navObjects.map(navObject => {\r\n    return (\r\n      <ListItem button key={navObject.name} onClick ={() => setMobileToggle(false)} >\r\n        <NavLink to = {navObject.path} key = {navObject.id} className={classes.drawerItem}>\r\n          <ListItemText className={classes.drawerText}>\r\n            <Typography variant=\"subtitle1\">\r\n              {navObject.name}\r\n            </Typography>\r\n          </ListItemText>\r\n        </NavLink>\r\n        <Divider />\r\n      </ListItem>\r\n    );\r\n  });\r\n\r\n\r\n  const menu = (\r\n    <Drawer anchor={\"left\"} open={mobileToggle} onClose={() => setMobileToggle(false)}>\r\n      <div\r\n        role= {\"presentation\"}\r\n        className= {classes.list}\r\n      >\r\n        <List>\r\n          {drawerItems}\r\n        </List>\r\n      </div>\r\n    </Drawer>\r\n    \r\n  )\r\n\r\n  const mobileIcon = (mobileToggle === true) ? \r\n  (<MenuOpenIcon onClick ={() => {setMobileToggle(!mobileToggle);}}/>) :\r\n  (<MenuIcon onClick ={() => {setMobileToggle(!mobileToggle);}}/>) \r\n\r\n  return (\r\n    <Grid item xs={12}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Hidden mdUp>\r\n            <Grid item xs={1}>\r\n              {mobileIcon}\r\n            </Grid>\r\n            {menu}\r\n          </Hidden>\r\n\r\n          {/*TODO: Put a theme here so the name doesn't get screwed up.*/}\r\n          <Grid item md={4} xs={11} className={classes.centerText}>\r\n            <Hidden smDown>\r\n              <Typography variant=\"h5\">\r\n                {'Ethical Landscape Initiative'}\r\n              </Typography>\r\n            </Hidden>\r\n            <Hidden mdUp>\r\n              <Typography variant=\"h6\">\r\n                {'Ethical Landscape Initiative'}\r\n              </Typography>\r\n            </Hidden>\r\n          </Grid>\r\n\r\n          <Hidden smDown>\r\n            <Grid item md={4}/>\r\n            <Grid item md={4}>\r\n              <div className = {classes.navList}>\r\n                {navListItems}\r\n              </div>\r\n            </Grid>          \r\n          </Hidden>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport { AppBar, Toolbar, Grid, makeStyles } from '@material-ui/core';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n  navList: {\r\n    display: 'flex'\r\n  },\r\n  navItem: {\r\n    margin: 'auto',\r\n    color: 'white',\r\n    textDecoration: 'none'\r\n  },\r\n  footer: {\r\n    position: 'relative',\r\n    left: '0',\r\n    bottom: '0',\r\n    right: '0'\r\n  }\r\n});\r\n\r\nfunction Footer() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n      <footer className={classes.footer}>\r\n        <Grid item xs={12}>\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n              <Grid item xs={5}>\r\n\r\n              </Grid>\r\n              <Grid item xs={5}/>\r\n\r\n              <Grid item xs={1}>\r\n                <div className = {classes.navList}>\r\n                <NavLink to = \"/\" className={classes.navItem}>\r\n                  <InstagramIcon />\r\n                </NavLink>\r\n                <NavLink to = \"/\" className={classes.navItem}>\r\n\r\n                  <FacebookIcon />\r\n                  </NavLink>\r\n                <NavLink to = \"/\" className={classes.navItem}>\r\n                  <TwitterIcon />\r\n                </NavLink>\r\n                </div>\r\n              </Grid>\r\n            </Toolbar>\r\n        </AppBar>\r\n\r\n        </Grid>\r\n      </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n\r\n\r\n","import React, {Fragment} from 'react';\r\n\r\nfunction Home() {\r\n  return (\r\n    <Fragment>\r\n        <h1>{\"This is the home page. More information will be displayed once we know what we want.\"}</h1>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, {Fragment} from 'react';\r\nfunction About() {\r\n  return (\r\n    <Fragment>\r\n        <h1>{\"This is the about page. More information will be displayed once we know what we want.\"}</h1>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, Grid, Backdrop, CircularProgress } from '@material-ui/core';\r\nimport Tabletop from 'tabletop';\r\nimport { useParams } from 'react-router-dom';\r\nconst useStyles = makeStyles({\r\n    flex: {\r\n        display:\"flex\"\r\n    },\r\n    pictureCard: {\r\n        paddingTop: \"15px\",\r\n        paddingBottom: \"15px\",\r\n        height: '500px'\r\n    },\r\n    imageFit: {\r\n        objectFit: \"cover\",\r\n        width: '85%',\r\n        height: '80%'\r\n    }\r\n});\r\n\r\n\r\nfunction Plant() {\r\n    let { plantName } = useParams();\r\n    const [plant, setPlant] = useState(null);\r\n    const [loading, setLoading] = useState(true)\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {  \r\n        async function fetchData() {\r\n          Tabletop.init({\r\n            key: '1xq_h1oDzlFt8wU4qLwVUHDN6P-z9v_A39bgNyb9rOng',\r\n            callback: plants => {\r\n                /* Find the desired plant */\r\n                const plantList = plants.filter(item => {\r\n                    return plantName === `${item.genus}-${item.species}`\r\n                })\r\n                console.log(plantList);\r\n                if (plantList.length !== 0) {\r\n                    setPlant(plantList[0])\r\n                }\r\n                console.log(\"Does this update\");\r\n                setLoading(false);\r\n            },\r\n            simpleSheet: true\r\n          })\r\n        }\r\n        fetchData();\r\n      }, [plantName]);\r\n\r\n    let content = null;\r\n    if (loading === false && plant === null) {\r\n        content = (<div>{\"Plant Not Found\"}</div>)\r\n    }\r\n    else if (plant !== null) {\r\n        const attribute = (<div>{`Photo by user ${plant.uploader} submitted to iNaturalist.org`}</div>);\r\n\r\n        content = (\r\n        <div className={classes.flex}>\r\n          <div className={classes.pictureCard}>\r\n              <img className={classes.imageFit} alt={plant.photoName}src={`../images/${plant.genus}-${plant.species}.jpg`}/>\r\n              {attribute}\r\n          </div>\r\n          <div>\r\n              <div>{\"Common Name: \" + plant.commonName} </div>\r\n              <div>{`Scientific Name: ${plant.genus} ${plant.species}`} </div>\r\n              <div>{`States and Province: ${plant.stateAndProvince}`} </div>\r\n              <div>{`Duration: ${plant.duration}`} </div>\r\n              <div>{`Growth Habit: ${plant.growthHabit}`} </div>\r\n              <div>{`Native Status: ${plant.nativeStatus}`} </div>\r\n              <div>{`Active Growth Period: ${plant.activeGrowthPeriod}`} </div>\r\n              <div>{`Shade Tolerance: ${plant.shadeTolerance}`} </div>\r\n              <div>{`Commercial Availability: ${plant.commercialAvailability}`} </div>\r\n          </div>\r\n      </div>)\r\n    }\r\n    return (\r\n    <Grid container>\r\n        <Grid item>\r\n            {content}\r\n        </Grid>\r\n        <Backdrop open={loading}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n    </Grid>\r\n    )\r\n}\r\n  \r\n  export default Plant","export default {\r\n    data: {\r\n        shadeToleranceOptions : [ \r\n            \"Tolerant\",\r\n            \"Intermediate\",\r\n            \"Intolerant\"\r\n        ],\r\n    \r\n        durationOptions: [\r\n            \"Perennial\",\r\n            \"Biennial\",\r\n            \"Annual\"\r\n        ],\r\n        growthHabitOptions: [\r\n            \"Tree\",\r\n            \"Shrub\",\r\n            \"Forb\",\r\n            \"Herb\",\r\n            \"Graminoid\",\r\n            \"Subshrub\",\r\n            \"Vine\"\r\n        ],\r\n        \r\n        activeGrowthPeriodOptions: [\r\n            \"Fall\",\r\n            \"Winter\",\r\n            \"Spring\",\r\n            \"Summer\"\r\n        ],\r\n    \r\n        commercialAvailabilityOptions: [\r\n            \"Contracting Only\",\r\n            \"Field Collections Only\",\r\n            \"Routinely Available\"\r\n        ]\r\n    }\r\n    \r\n    }\r\n    ","import { makeStyles, Divider, IconButton, TextField, Typography, Checkbox, Grid, FormControlLabel, Hidden } from \"@material-ui/core\";\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Search from '@material-ui/icons/Search'\r\nimport React, { useState, Fragment } from \"react\";\r\nimport data from '../shared/filterOptions';\r\n\r\n// const GreenCheckbox = withStyles({\r\n//     root: {\r\n//       color: green[400],\r\n//       '&$checked': {\r\n//         color: green[600],\r\n//       },\r\n//     },\r\n//     checked: {},\r\n// })(props => <Checkbox color=\"default\" {...props} />);\r\n\r\nconst useStyles = makeStyles({\r\n    filters: {\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    filter: {\r\n        display: 'flex',\r\n        paddingTop: '15px'\r\n    },\r\n    toggleIcon: {\r\n        marginRight: '0',\r\n        marginLeft: 'auto'\r\n    },\r\n    option: {\r\n        paddingLeft: '25px'\r\n    },\r\n    searchBar: {\r\n        paddingTop: '15px',\r\n        paddingBottom: '15px'\r\n    },\r\n    searchField: {\r\n        flexGrow: 1\r\n    },\r\n    backIcon: {\r\n        marginRight: '0',\r\n        marginLeft: 'auto'\r\n    }\r\n});\r\n\r\nfunction Filter(props) {\r\n    const {searchText, setSearchText, favoritedFilter, setFavoritedFilter, selects, setPageNumber, setMobileFilterToggle} = props.props;\r\n    const classes = useStyles();\r\n    const displaySearchBar =  (\r\n        <div className = {classes.searchBar}>\r\n            <Grid container spacing={1} alignItems=\"flex-end\">\r\n                <Grid item>\r\n                    <Search />\r\n                </Grid>\r\n                <Grid item className={classes.searchField}>\r\n                    <TextField\r\n                        id=\"Search Plants\"\r\n                        label=\"Search Plants\"\r\n                        fullWidth={true}\r\n                        value={searchText}\r\n                        color={\"secondary\"}\r\n                        onChange={e => {\r\n                            setSearchText(e.target.value);\r\n                            setPageNumber(0);\r\n                        }}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n\r\n    const displayFilter = selects.map(select => {\r\n        const displayFilterProps = {label: select.label, list: select.list, setList: select.setList, options: select.options, setPageNumber};\r\n        return (<DisplayFilter key={select.label} props={displayFilterProps}/>)\r\n    })\r\n    \r\n    const displayFavoritedFilter = (\r\n        <div>\r\n            <FormControlLabel control={<Checkbox checked={favoritedFilter} onChange={() => {setFavoritedFilter(!favoritedFilter); setPageNumber(0);}}/>} label=\"Show Favorite Plants\" />\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div className={classes.filters}>\r\n            <Hidden mdUp>\r\n                <IconButton onClick = {() => setMobileFilterToggle(false)}>\r\n                    <ArrowBackIcon className={classes.backIcon}/>\r\n                </IconButton>\r\n            </Hidden>\r\n            {displaySearchBar}\r\n            <Hidden smDown>\r\n                <Typography variant=\"h5\" color={\"secondary\"}>\r\n                    Filters\r\n                </Typography>\r\n            </Hidden>\r\n            {displayFavoritedFilter}\r\n            {displayFilter}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction DisplayFilter(props) {\r\n    \r\n    const {label, list, setList, options, setPageNumber} = props.props;\r\n    const [toggle, setToggle] = useState(false);\r\n    const classes = useStyles();\r\n\r\n    const icon = (toggle === false) ? (<ExpandMoreIcon />) : (<ExpandLessIcon />);\r\n\r\n    function handleClick(e) {\r\n        let tempList = JSON.parse(JSON.stringify(list));\r\n        if (list.includes(e)) {\r\n            tempList = tempList.filter(item => {return(item !== e)})\r\n        }\r\n        else {\r\n            tempList.push(e);\r\n        }\r\n        setList(tempList);\r\n        setPageNumber(0);\r\n    }\r\n\r\n    const optionCheckboxes = data.data[options].map(option => {\r\n        return(\r\n            <div\r\n                className={classes.option}\r\n                key={option}\r\n            >\r\n                <FormControlLabel control={<Checkbox checked={list.includes(option)} value={option} onChange={()=> handleClick(option)}/>} label={option} />\r\n            </div>\r\n        )\r\n    })\r\n\r\n    const displayOptions = (toggle === false) ? null : optionCheckboxes;\r\n    \r\n    return (\r\n        <Fragment>\r\n            <div className={classes.filter}>\r\n                <Typography variant=\"h6\" color={\"secondary\"}>\r\n                    {label}\r\n                </Typography>\r\n                <IconButton\r\n                    onClick={() => setToggle(!toggle)}\r\n                    className={classes.toggleIcon}\r\n                >\r\n                    {icon}\r\n                </IconButton>\r\n            </div>\r\n            {displayOptions}\r\n            <Divider />\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Filter;","export default {\r\n    data: {\r\n        plantsPerPageOptions : [ \r\n            10,\r\n            25,\r\n            50\r\n        ]\r\n    }\r\n}\r\n","\r\nimport React from \"react\";\r\nimport { Select, MenuItem, ListItemText, IconButton, makeStyles, Grid, Typography, Hidden } from \"@material-ui/core\";\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport data from '../../shared/pageViewOptions'\r\n\r\nconst useStyles = makeStyles({\r\n    statusBar: {\r\n        paddingTop: '15px',\r\n    },\r\n    statusItem: {\r\n        display: 'flex',\r\n        margin: 'auto',\r\n        height: '100%'\r\n    },\r\n    centerText: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\"\r\n    }\r\n});\r\n\r\nfunction Status(props) {\r\n    const {pageNumber, setPageNumber, plantsPerPage, setPlantsPerPage, maxLength, filteredPlantLength} = props.props;\r\n    const plantsPerPageOptions = data.data.plantsPerPageOptions;\r\n    const classes = useStyles();\r\n\r\n    const pageSizeSelect = (\r\n        <div className={classes.statusItem}>\r\n            <Typography variant= \"body1\" color={\"secondary\"} className={classes.centerText}>\r\n                {'Rows Per Page'}\r\n            </Typography>\r\n            <Select\r\n                style={{ width: \"50px\", marginLeft: \"10px\" }}\r\n                value={plantsPerPage}\r\n                onChange={e => {setPlantsPerPage(e.target.value); setPageNumber(0);}}\r\n                color={\"secondary\"}\r\n            >\r\n                {plantsPerPageOptions.map(item => (\r\n                <MenuItem key={item} value={item} id={item}>\r\n                    <ListItemText primary={item} />\r\n                </MenuItem>\r\n                ))}\r\n            </Select>\r\n        </div>\r\n    );\r\n\r\n    const pageStatusInfo =(\r\n        <div className={classes.statusItem}>\r\n            <Typography variant= \"body1\" color={\"secondary\"} className={classes.centerText}>\r\n                {`Showing Plants ${pageNumber + 1}-${maxLength} Of ${filteredPlantLength}`}\r\n            </Typography>\r\n        </div>\r\n    );\r\n\r\n    const pageNavigation = (\r\n        <div className={classes.statusItem}>\r\n            <IconButton\r\n                disabled = {(pageNumber === 0) ? true : false}\r\n                onClick={() => {const value = (pageNumber - plantsPerPage < 0) ? 0 : pageNumber- plantsPerPage; setPageNumber(value)}}\r\n                color={\"secondary\"}\r\n            >\r\n                <KeyboardArrowLeftIcon/>\r\n            </IconButton>\r\n            <IconButton\r\n                disabled = {(pageNumber + plantsPerPage >= filteredPlantLength) ? true : false}\r\n                onClick={() => setPageNumber(pageNumber + plantsPerPage)}\r\n            >\r\n                <KeyboardArrowRightIcon/>\r\n            </IconButton>\r\n        </div>\r\n    )\r\n    return (\r\n        <Grid container>\r\n            <Hidden smDown>\r\n                <Grid item md={5}/>\r\n            </Hidden>\r\n            <Grid item sm={5} md={2} xs={12}>\r\n                {pageSizeSelect}\r\n            </Grid>\r\n            <Grid item sm={5} md={3} xs={12}>\r\n                {pageStatusInfo}\r\n            </Grid>\r\n            <Grid item sm={2} md={2} xs={12}>\r\n                {pageNavigation}\r\n            </Grid>\r\n        </Grid> \r\n    )\r\n}\r\n\r\nexport default Status","import React, { Fragment } from \"react\";\r\nimport { Grid, Typography, Icon, makeStyles, Hidden } from \"@material-ui/core\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    flex: {\r\n        display: 'flex',\r\n        width: '85%'\r\n    },\r\n    columnFlex: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    navLink: {\r\n        textDecoration: 'none'\r\n    },\r\n    rightAligned: {\r\n        marginRight: '0',\r\n        marginLeft: 'auto'\r\n    },\r\n    pictureCard: {\r\n        paddingTop: \"15px\",\r\n        paddingBottom: \"15px\",\r\n        height: '500px'\r\n    },\r\n    imageFit: {\r\n        objectFit: \"cover\",\r\n        width: '85%',\r\n        height: '80%'\r\n    },\r\n    imageFitMobile: {\r\n        objectFit: \"cover\",\r\n        width: '100%',\r\n        height: '80%'\r\n    }\r\n});\r\n\r\nfunction PlantCard(props) {\r\n    const {plant, favorited, onClickFavorite} = props.props;\r\n    const classes = useStyles();\r\n    \r\n    //const attribute = (<div>{`Photo by user ${plant.uploader} submitted to iNaturalist.org`}</div>);\r\n    const photoName = `${plant.genus}-${plant.species}`\r\n    return (\r\n        <Fragment>\r\n            <Grid item xs={12} md={4} sm={6} className={classes.pictureCard}>\r\n                <NavLink to = {`/plant/${photoName}`} className={classes.navLink}>\r\n                    <Hidden smDown>\r\n                        <img className={classes.imageFit} alt={photoName} src={`./images/${photoName}.jpg`}/>\r\n                    </Hidden>\r\n                    <Hidden mdUp>\r\n                        <img className={classes.imageFitMobile} alt={photoName} src={`./images/${photoName}.jpg`}/>\r\n                    </Hidden>\r\n                </NavLink>\r\n                    <div className={classes.flex}>\r\n                        <NavLink to = {`/plant/${photoName}`} className={classes.navLink}>\r\n                            <div className={classes.columnFlex}>\r\n                                <Typography variant=\"h6\" color={\"secondary\"}>\r\n                                    {plant.commonName}\r\n                                </Typography>\r\n                                <Typography variant=\"subtitle1\" color={\"secondary\"}>\r\n                                    {`${plant.genus} ${plant.species}`}\r\n                                </Typography>\r\n                            </div> \r\n                        </NavLink>\r\n                        <div className = {classes.rightAligned}>\r\n                            <Icon>\r\n                                {favorited ? <FavoriteIcon onClick = {() => onClickFavorite(false, plant.id)} /> : <FavoriteBorderIcon onClick={() => {onClickFavorite(true, plant.id)}}/>}\r\n                            </Icon>\r\n                        </div>\r\n                    </div>\r\n            </Grid>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default PlantCard","import React from \"react\";\r\nimport Status from \"./status\";\r\nimport PlantCard from \"./plantCard\";\r\nimport {Grid} from \"@material-ui/core/\";\r\n    \r\nfunction Plants(props) {\r\n    const {pageStatusProps, plantCardsProps} = props.props;\r\n\r\n    function onClickFavorite(isLiked, id) {\r\n        const favoritePlantsCopy = JSON.parse(JSON.stringify(plantCardsProps.favoritePlants));\r\n        if (isLiked === false) {\r\n          favoritePlantsCopy.splice(favoritePlantsCopy.indexOf(id),1);\r\n          plantCardsProps.setFavoritePlants(favoritePlantsCopy);\r\n        }\r\n        else {\r\n            plantCardsProps.setFavoritePlants(plantCardsProps.favoritePlants.concat(id));\r\n        }\r\n    }\r\n\r\n    const plantCard = plantCardsProps.displayPlantList.map(plant => {\r\n        const favorited = plantCardsProps.favoritePlants.includes(plant.id);\r\n        const plantCardProps = {\r\n            plant, favorited, onClickFavorite\r\n        };\r\n\r\n        return (\r\n            <PlantCard key={plant.id} props={plantCardProps}/>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Status props={pageStatusProps}/>\r\n            <Grid container>\r\n                {plantCard}\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Plants;","import React, {useState, useEffect, Fragment} from 'react';\r\nimport {\r\n  Backdrop,\r\n  CircularProgress,\r\n  Grid,\r\n  Typography,\r\n  Hidden,\r\n  makeStyles,\r\n  Button,\r\n  Drawer\r\n} from \"@material-ui/core/\";\r\nimport Tabletop from 'tabletop';\r\nimport Filters from \"./filters\";\r\nimport Plants from \"./plants/plants\"\r\n\r\nconst useStyles = makeStyles({\r\n  emptyResults: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    height:\"100%\"\r\n  },\r\n  backdrop: {\r\n    zIndex: \"999\",\r\n    color: \"#fff\",\r\n  },\r\n  filters: {\r\n    paddingRight: \"50px\"\r\n  }\r\n});\r\n\r\n\r\nfunction PlantList() {\r\n  const classes = useStyles();\r\n  //Internal State\r\n  const [loading, setLoading] = useState(true);\r\n  const [mobileFilterToggle, setMobileFilterToggle] = useState(false);\r\n\r\n  //These states are used to filter \r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [favoritedFilter, setFavoritedFilter] = useState(false);\r\n\r\n  const [shadeToleranceSelected, setShadeToleranceSelected] = useState([]);\r\n  const [durationSelected, setDurationSelected] = useState([]);\r\n  const [growthHabitSelected, setGrowthHabitSelected] = useState([]);\r\n  const [activeGrowthPeriodSelected, setActiveGrowthPeriodSelected] = useState([]);\r\n  const [commercialAvailabilitySelected, setCommercialAvailabilitySelected] = useState([]);\r\n\r\n  //These are used for Plant object\r\n  const [plantList, setPlantList] = useState([]);\r\n  const [pageNumber, setPageNumber] = useState(0);\r\n  const [plantsPerPage, setPlantsPerPage] = useState(10);\r\n  const [favoritePlants, setFavoritePlants] = useState( () => {\r\n    const localData = localStorage.getItem(\"favoritePlants\");\r\n    return (localData) ? JSON.parse(localData) : [];\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('favoritePlants', JSON.stringify(favoritePlants));\r\n\r\n    async function fetchData() {\r\n      Tabletop.init({\r\n        key: '1xq_h1oDzlFt8wU4qLwVUHDN6P-z9v_A39bgNyb9rOng',\r\n        callback: plants => {\r\n          setLoading(false);\r\n          setPlantList(plants);\r\n        },\r\n        simpleSheet: true\r\n      })\r\n    }\r\n    fetchData();\r\n  }, [favoritePlants]);\r\n\r\n  function isValueIncluded(value, selectedList){\r\n    let isValueIncluded = false;\r\n    for (const item of selectedList) {\r\n      if(value.toLowerCase().includes(item.toLowerCase()))\r\n      {\r\n        isValueIncluded = true;\r\n      }\r\n    }\r\n    \r\n    return isValueIncluded;\r\n  };\r\n\r\n  function isSearchIncluded(plant) {\r\n    let count = 0;\r\n    const searchList = searchText.split(' ');\r\n\r\n    for(const searchItem of searchList) {\r\n      if(searchItem.trim() === \"\") {\r\n        continue;\r\n      }\r\n      if(plant.genus.toLowerCase().includes(searchItem.trim().toLowerCase())) {count += 1};\r\n      if(plant.species.toLowerCase().includes(searchItem.trim().toLowerCase())) {count += 1};\r\n      if(plant.commonName.toLowerCase().includes(searchItem.trim().toLowerCase())) {count += 1};\r\n    }\r\n    return count;\r\n  }\r\n  \r\n  const filteredPlantList = plantList.filter(plant => {\r\n    const favoritedResults = (favoritedFilter === false || favoritePlants.includes(plant.id));\r\n    const shadeToleranceResults = (shadeToleranceSelected.length === 0 || shadeToleranceSelected.includes(plant.shadeTolerance));\r\n    const durationResults = (durationSelected.length === 0 || isValueIncluded(plant.duration, durationSelected));\r\n    const growthHabitResults = (growthHabitSelected.length === 0 || isValueIncluded(plant.growthHabit, growthHabitSelected))\r\n    const activeGrowthPeriodResults = (activeGrowthPeriodSelected.length ===0 || plant.activeGrowthPeriod === \"Year Round\" || isValueIncluded(plant.activeGrowthPeriod, activeGrowthPeriodSelected))\r\n    const commercialAvailabilityResults = (commercialAvailabilitySelected.length === 0 || commercialAvailabilitySelected.includes(plant.commercialAvailability))\r\n    const searchResults = (searchText.trim() === \"\" || isSearchIncluded(plant));\r\n    return (searchResults && shadeToleranceResults &&  durationResults && growthHabitResults && activeGrowthPeriodResults && commercialAvailabilityResults && favoritedResults);\r\n  });\r\n  const filteredPlantLength = filteredPlantList.length;\r\n  const maxLength = ((pageNumber + plantsPerPage) > filteredPlantList.length) ? filteredPlantList.length : (pageNumber + plantsPerPage);\r\n  \r\n\r\n  function compare(a, b) {\r\n    if (isSearchIncluded(a) < isSearchIncluded(b)) return 1;\r\n    if (isSearchIncluded(b) < isSearchIncluded(a)) return -1;\r\n  \r\n    return 0;\r\n  }\r\n\r\n  //Now we sort the filtered plants based on the count.\r\n  const sortedFilteredPlantList = [...filteredPlantList].sort(compare);\r\n  const displayPlantList = sortedFilteredPlantList.slice(pageNumber, maxLength);\r\n  \r\n  const plantsProps = {\r\n    pageStatusProps: {\r\n      pageNumber, setPageNumber, plantsPerPage, setPlantsPerPage, maxLength, filteredPlantLength\r\n    },\r\n    plantCardsProps: {\r\n      displayPlantList, favoritePlants, setFavoritePlants\r\n    }\r\n  };\r\n\r\n  const filtersProps = {\r\n    searchText, setSearchText, favoritedFilter, setFavoritedFilter, setPageNumber, setMobileFilterToggle,\r\n    selects: \r\n      [{\r\n        list: shadeToleranceSelected,\r\n        setList: setShadeToleranceSelected,\r\n        options: \"shadeToleranceOptions\",\r\n        label: \"Shade Tolerance\"\r\n      },\r\n      {\r\n        list: durationSelected,\r\n        setList: setDurationSelected,\r\n        options: \"durationOptions\",\r\n        label: \"Duration\"\r\n      },\r\n      {\r\n        list: growthHabitSelected,\r\n        setList: setGrowthHabitSelected,\r\n        options: \"growthHabitOptions\",\r\n        label: \"Growth Habit\"\r\n      },\r\n      {\r\n        list: activeGrowthPeriodSelected,\r\n        setList: setActiveGrowthPeriodSelected,\r\n        options: \"activeGrowthPeriodOptions\",\r\n        label: \"Active Growth Period\"\r\n      },\r\n      {\r\n        list: commercialAvailabilitySelected,\r\n        setList: setCommercialAvailabilitySelected,\r\n        options: \"commercialAvailabilityOptions\",\r\n        label: \"Commercial Availability\"\r\n      }]\r\n    \r\n  }\r\n\r\n  const emptyResults = (\r\n    <div className={classes.emptyResults}>\r\n      <Typography variant=\"h3\">{\"There are no plants that match your filters\"}</Typography>\r\n    </div>\r\n    );\r\n\r\n  return (\r\n      <Grid container>\r\n      {loading ? null : (\r\n        <Fragment>\r\n          <Hidden smDown>\r\n            <Grid item md={3} className={classes.filters} >\r\n              <Filters props={filtersProps}/>\r\n            </Grid>\r\n          </Hidden>\r\n          <Grid item md={9} xs={12}>\r\n            <Hidden mdUp>\r\n              <Button variant=\"outlined\" color=\"secondary\" fullWidth onClick={() => setMobileFilterToggle(true)}>\r\n                {\"Show Filters\"}\r\n              </Button>\r\n              <Drawer anchor={\"left\"} open={mobileFilterToggle} onClose={() => setMobileFilterToggle(false)}>\r\n                <Filters props={filtersProps}/>\r\n              </Drawer>\r\n            </Hidden>\r\n            {(filteredPlantLength) ? (<Plants props= {plantsProps}/>) : emptyResults}\r\n          </Grid>\r\n        </Fragment>\r\n      )}\r\n      <Backdrop className={classes.backdrop} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n    </Grid>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default PlantList;\r\n","import React, {Fragment} from 'react';\r\nfunction Store() {\r\n    return (\r\n        <Fragment>\r\n            <h1>{\"This is the store page. More information will be displayed once we know what we want.\"}</h1>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Store;","import React from 'react';\r\nimport Nav from \"./components/nav/nav\";\r\nimport Footer from \"./components/footer/footer\"\r\nimport Home from \"./components/home/home\";\r\nimport About from \"./components/about/about\";\r\nimport Plant from \"./components/plant/plant\";\r\nimport PlantList from \"./components/plantList/plantList\";\r\nimport Store from \"./components/store/store\";\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport {Grid, makeStyles} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n  routeComponentContainer: {\r\n    minHeight: 'calc(100vh - 128px)'\r\n  }\r\n});\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const pageObjects = [\r\n      {id: 1, name: \"Home\",           path: \"/\",                exact: true,  display: true,  component: Home},\r\n      {id: 2, name: \"About\",          path: \"/about\",           exact: true,  display: true,  component: About},\r\n      {id: 3, name: \"Plant Database\", path: \"/plants\",          exact: true,  display: true,  component: PlantList},\r\n      {id: 4, name: \"Marketplace\",    path: \"/store\",           exact: true,  display: true,  component: Store},\r\n      {id: 5, name: \"Plant\",          path: \"/plant/:plantName\",exact: true,  display: false, component: Plant}\r\n  ];\r\n\r\n    const navObjects= pageObjects.filter(pageObject => {\r\n      return(pageObject.display === true)\r\n    })\r\n    const pageRoutes= pageObjects.map(navObject => {\r\n      return(<Route key={navObject.id} path={navObject.path} exact={navObject.exact} component={navObject.component} />);\r\n    });\r\n\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <Grid container>\r\n      <Nav navObjects={navObjects}/>\r\n      <Switch>\r\n        <Grid item xs={12} className={classes.routeComponentContainer}>\r\n          {pageRoutes}\r\n        </Grid>\r\n      </Switch>\r\n      </Grid>\r\n      <Footer />\r\n    </Router>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {ThemeProvider, createMuiTheme} from '@material-ui/core/styles';\r\nimport { CssBaseline } from '@material-ui/core';\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#687864\"\r\n    },\r\n    secondary: {\r\n      main: \"#31708E\" \r\n    },\r\n    background: {\r\n      default: \"#F7F9FB\"\r\n    }\r\n  }\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}